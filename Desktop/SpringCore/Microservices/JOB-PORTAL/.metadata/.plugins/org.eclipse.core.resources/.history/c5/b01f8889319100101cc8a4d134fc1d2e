package com.ey.controller;
 
import com.ey.dto.SimpleResponse;
import com.ey.entity.User;
import com.ey.exception.NotFoundException;
import com.ey.repository.UserRepository;
import com.ey.service.FileStorageService;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.Authentication;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
 
@RestController
@RequestMapping("/api/v1/users")
public class UserController {
 
    private final UserRepository userRepo;
    private final FileStorageService storage;
 
    public UserController(UserRepository userRepo, FileStorageService storage) {
        this.userRepo = userRepo;
        this.storage = storage;
    }
 
    /**
     * Upload profile image for a job seeker.
     * Requires Authorization: Bearer <token>
     * Only role SEEKER allowed.
     */
    @PutMapping("/profile-image")
    @PreAuthorize("hasRole('SEEKER')")
    public ResponseEntity<?> uploadProfileImage(@RequestParam("file") MultipartFile file, Authentication auth) {
        String email = auth.getName();
        User u = userRepo.findByEmail(email).orElseThrow(() -> new NotFoundException("User not found"));
        if (file == null || file.isEmpty()) {
            SimpleResponse err = new SimpleResponse();
            err.setMessage("No file uploaded");
            return ResponseEntity.badRequest().body(err);
        }
        String filename = storage.storeFile(file, u.getId());
        u.setProfileImage(filename);
        userRepo.save(u);
        SimpleResponse resp = new SimpleResponse();
        resp.setMessage("Profile image uploaded");
        return ResponseEntity.ok(resp);
    }
}